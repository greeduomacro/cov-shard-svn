/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AG_lilliesvaseAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AG_lilliesvaseAddonDeed();
			}
		}

		[ Constructable ]
		public AG_lilliesvaseAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 3212 );
			ac.Hue = 1150;
			AddComponent( ac, 0, -1, 1 );
			ac = new AddonComponent( 3231 );
			AddComponent( ac, 1, 1, 15 );
			ac = new AddonComponent( 3211 );
			ac.Hue = 1150;
			AddComponent( ac, 1, 1, 20 );
			ac = new AddonComponent( 3234 );
			AddComponent( ac, 0, 1, 7 );
			ac = new AddonComponent( 2885 );
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 3212 );
			ac.Hue = 1150;
			AddComponent( ac, 1, 1, 16 );
			ac = new AddonComponent( 3211 );
			ac.Hue = 1150;
			AddComponent( ac, -1, 0, 1 );
			ac = new AddonComponent( 6378 );
			ac.Name = "Whispering Rose";
			AddComponent( ac, 1, 1, 18 );

		}

		public AG_lilliesvaseAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AG_lilliesvaseAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AG_lilliesvaseAddon();
			}
		}

		[Constructable]
		public AG_lilliesvaseAddonDeed()
		{
			Name = "AG_lilliesvase";
		}

		public AG_lilliesvaseAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}