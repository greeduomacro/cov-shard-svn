/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AG_friendshipMAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AG_friendshipMAddonDeed();
			}
		}

		[ Constructable ]
		public AG_friendshipMAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 4647 );
			ac.Hue = 1150;
			AddComponent( ac, 0, 1, 9 );
			ac = new AddonComponent( 7111 );
			AddComponent( ac, -1, 0, 6 );
			ac = new AddonComponent( 5020 );
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 3 );
			ac = new AddonComponent( 7110 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 2581 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, -1, 0, 1 );
			ac = new AddonComponent( 2583 );
			ac.Light = LightType.ArchedWindowEast;
			ac.Hue = 1150;
			AddComponent( ac, 1, 2, 14 );

		}

		public AG_friendshipMAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AG_friendshipMAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AG_friendshipMAddon();
			}
		}

		[Constructable]
		public AG_friendshipMAddonDeed()
		{
			Name = "AG_friendshipM";
		}

		public AG_friendshipMAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}