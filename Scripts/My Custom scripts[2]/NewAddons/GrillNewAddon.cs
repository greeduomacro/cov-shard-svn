/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class GrillNewAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new GrillNewAddonDeed();
			}
		}

		[ Constructable ]
		public GrillNewAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 60 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 60 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 0, 3, 0 );
			ac = new AddonComponent( 73 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 70 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 84 );
			AddComponent( ac, 0, 0, 18 );
			ac = new AddonComponent( 84 );
			AddComponent( ac, 0, 2, 18 );
			ac = new AddonComponent( 84 );
			AddComponent( ac, 0, 1, 18 );
			ac = new AddonComponent( 65 );
			AddComponent( ac, 1, 3, 0 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 66 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 54 );
			AddComponent( ac, 0, -2, 0 );
			ac = new AddonComponent( 1184 );
			ac.Hue = 2102;
			AddComponent( ac, 1, -1, 6 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 1184 );
			ac.Hue = 2102;
			AddComponent( ac, 1, 3, 6 );
			ac = new AddonComponent( 67 );
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 1305 );
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 1305 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 1305 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 1305 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 7137 );
			AddComponent( ac, 1, 1, 3 );
			ac = new AddonComponent( 7137 );
			AddComponent( ac, 1, 0, 3 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 5 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 0, 5 );
			ac = new AddonComponent( 7386 );
			ac.Hue = 961;
			ac.Name = "grill";
			AddComponent( ac, 1, 1, 6 );
			ac = new AddonComponent( 7386 );
			ac.Hue = 961;
			ac.Name = "grill";
			AddComponent( ac, 1, 0, 6 );
			ac = new AddonComponent( 7386 );
			ac.Hue = 961;
			ac.Name = "grill";
			AddComponent( ac, 1, 2, 6 );
			ac = new AddonComponent( 7137 );
			AddComponent( ac, 1, 2, 3 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 2, 5 );
			ac = new AddonComponent( 7831 );
			AddComponent( ac, 1, 2, 6 );
			ac = new AddonComponent( 2449 );
			AddComponent( ac, 1, -1, 6 );

		}

		public GrillNewAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class GrillNewAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new GrillNewAddon();
			}
		}

		[Constructable]
		public GrillNewAddonDeed()
		{
			Name = "GrillNew";
		}

		public GrillNewAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}